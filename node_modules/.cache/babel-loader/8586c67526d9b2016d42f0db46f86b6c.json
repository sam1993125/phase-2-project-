{"ast":null,"code":"import _regeneratorRuntime from\"/Users/yixin/Development/code/phase-2/phase-2-project/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/yixin/Development/code/phase-2/phase-2-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/yixin/Development/code/phase-2/phase-2-project/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';// import SearchBar from \"./SearchBar\"\nimport NewContainer from\"./NewContainer\";import SearchBar from\"./SearchBar\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Database(_ref){var handleClick=_ref.handleClick;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),newWorks=_useState2[0],setNewWorks=_useState2[1];// const [ids, setIds] = useState([])\nvar _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),search=_useState4[0],setSearch=_useState4[1];// let arr =[]\n//useEffect 2. when ids state gets updated, start fetching each individual id\n//useEffect 1. gets ids when search term changes\nuseEffect(function(){if(!search)return;fetch(\"https://collectionapi.metmuseum.org/public/collection/v1/search?artistOrCulture=true&q=\".concat(search)).then(function(r){return r.json();}).then(function(data){// console.log('Data', data)\n// let list = data.objectIDs.filter(entry => entry.created > 100).slice(0, 99);\nvar idList=data.objectIDs.slice(0,10);// console.log(list)\n// setIds(list)\n// do the search functionality right here\nvar artList=[];idList.forEach(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(id){var req,res,art;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://collectionapi.metmuseum.org/public/collection/v1/objects/\".concat(id));case 2:req=_context.sent;_context.next=5;return req.json();case 5:res=_context.sent;art={title:res.title,image:res.primaryImageSmall,date:res.objectDate,artist:res.artistDisplayName,medium:res.medium,reference:res.objectURL};console.log('Work of art',art);artList.push(art);console.log('Art list',artList);setNewWorks(artList);case 11:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}());});}// eslint-disable-next-line react-hooks/exhaustive-deps\n,[search]);//   const displayArtworks = newWorks.filter((newWork) => \n//       Object.values(newWork).join(\" \").toLowerCase().includes(search.toLowerCase())\n//   )\n// console.log(newWorks)\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(SearchBar,{searchTerm:search,onSearchChange:setSearch}),/*#__PURE__*/_jsx(NewContainer,{newWorks:newWorks,handleClick:handleClick})]});}export default Database;","map":{"version":3,"names":["React","useEffect","useState","NewContainer","SearchBar","Database","handleClick","newWorks","setNewWorks","search","setSearch","fetch","then","r","json","data","idList","objectIDs","slice","artList","forEach","id","req","res","art","title","image","primaryImageSmall","date","objectDate","artist","artistDisplayName","medium","reference","objectURL","console","log","push"],"sources":["/Users/yixin/Development/code/phase-2/phase-2-project/src/components/Database.js"],"sourcesContent":["import React, {useEffect,useState} from 'react'\n// import SearchBar from \"./SearchBar\"\nimport NewContainer from \"./NewContainer\"\nimport SearchBar from \"./SearchBar\"\n\n\nfunction Database({handleClick}) {\n\nconst [newWorks, setNewWorks] = useState([])\n// const [ids, setIds] = useState([])\nconst [search, setSearch] = useState(\"\")\n\n// let arr =[]\n\n//useEffect 2. when ids state gets updated, start fetching each individual id\n//useEffect 1. gets ids when search term changes\nuseEffect(() => {\n        if (!search) return;\n        fetch(`https://collectionapi.metmuseum.org/public/collection/v1/search?artistOrCulture=true&q=${search}`)                                            \n            .then(r=> r.json())\n            .then((data) => {\n                // console.log('Data', data)\n                // let list = data.objectIDs.filter(entry => entry.created > 100).slice(0, 99);\n                let idList = data.objectIDs.slice(0,10)\n                // console.log(list)\n                // setIds(list)\n                // do the search functionality right here\n                let artList = []\n                idList.forEach(async (id) => {\n                    let req = await fetch(`https://collectionapi.metmuseum.org/public/collection/v1/objects/${id}`);\n                    let res = await req.json()\n                    let art = {\n                        title: res.title,\n                        image: res.primaryImageSmall,\n                        date: res.objectDate,\n                        artist: res.artistDisplayName,\n                        medium: res.medium,\n                        reference: res.objectURL\n                    }\n                    console.log('Work of art', art)\n                    artList.push(art)\n                    console.log('Art list', artList)\n                    setNewWorks(artList)\n                })\n            })\n        } // eslint-disable-next-line react-hooks/exhaustive-deps\n,[search])\n\n//   const displayArtworks = newWorks.filter((newWork) => \n//       Object.values(newWork).join(\" \").toLowerCase().includes(search.toLowerCase())\n//   )\n\n// console.log(newWorks)\n\nreturn (\n    <div>     \n    <SearchBar searchTerm={search} onSearchChange={setSearch}/>\n    <NewContainer newWorks={newWorks} handleClick={handleClick} />\n    </div>\n  )\n\n\n}\nexport default Database\n\n"],"mappings":"ibAAA,MAAOA,MAAP,EAAeC,SAAf,CAAyBC,QAAzB,KAAwC,OAAxC,CACA;AACA,MAAOC,aAAP,KAAyB,gBAAzB,CACA,MAAOC,UAAP,KAAsB,aAAtB,C,wFAGA,QAASC,SAAT,MAAiC,IAAdC,YAAc,MAAdA,WAAc,CAEjC,cAAgCJ,QAAQ,CAAC,EAAD,CAAxC,wCAAOK,QAAP,eAAiBC,WAAjB,eACA;AACA,eAA4BN,QAAQ,CAAC,EAAD,CAApC,yCAAOO,MAAP,eAAeC,SAAf,eAEA;AAEA;AACA;AACAT,SAAS,CAAC,UAAM,CACR,GAAI,CAACQ,MAAL,CAAa,OACbE,KAAK,kGAA2FF,MAA3F,EAAL,CACKG,IADL,CACU,SAAAC,CAAC,QAAGA,EAAC,CAACC,IAAF,EAAH,EADX,EAEKF,IAFL,CAEU,SAACG,IAAD,CAAU,CACZ;AACA;AACA,GAAIC,OAAM,CAAGD,IAAI,CAACE,SAAL,CAAeC,KAAf,CAAqB,CAArB,CAAuB,EAAvB,CAAb,CACA;AACA;AACA;AACA,GAAIC,QAAO,CAAG,EAAd,CACAH,MAAM,CAACI,OAAP,6FAAe,iBAAOC,EAAP,0JACKV,MAAK,4EAAqEU,EAArE,EADV,QACPC,GADO,qCAEKA,IAAG,CAACR,IAAJ,EAFL,QAEPS,GAFO,eAGPC,GAHO,CAGD,CACNC,KAAK,CAAEF,GAAG,CAACE,KADL,CAENC,KAAK,CAAEH,GAAG,CAACI,iBAFL,CAGNC,IAAI,CAAEL,GAAG,CAACM,UAHJ,CAINC,MAAM,CAAEP,GAAG,CAACQ,iBAJN,CAKNC,MAAM,CAAET,GAAG,CAACS,MALN,CAMNC,SAAS,CAAEV,GAAG,CAACW,SANT,CAHC,CAWXC,OAAO,CAACC,GAAR,CAAY,aAAZ,CAA2BZ,GAA3B,EACAL,OAAO,CAACkB,IAAR,CAAab,GAAb,EACAW,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBjB,OAAxB,EACAX,WAAW,CAACW,OAAD,CAAX,CAdW,uDAAf,iEAgBH,CA1BL,EA2BC,CAAC;AA7BD,CA8BR,CAACV,MAAD,CA9BQ,CAAT,CAgCA;AACA;AACA;AAEA;AAEA,mBACI,oCACA,KAAC,SAAD,EAAW,UAAU,CAAEA,MAAvB,CAA+B,cAAc,CAAEC,SAA/C,EADA,cAEA,KAAC,YAAD,EAAc,QAAQ,CAAEH,QAAxB,CAAkC,WAAW,CAAED,WAA/C,EAFA,GADJ,CAQC,CACD,cAAeD,SAAf"},"metadata":{},"sourceType":"module"}