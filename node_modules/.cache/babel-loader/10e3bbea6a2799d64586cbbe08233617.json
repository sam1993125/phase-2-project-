{"ast":null,"code":"var _jsxFileName = \"/Users/yixin/Development/code/phase-2/phase-2-project/src/components/Database.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import SearchBar from \"./SearchBar\"\n\nimport NewContainer from \"./NewContainer\";\nimport SearchBar from \"./SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Database(_ref) {\n  _s();\n\n  let {\n    handleClick\n  } = _ref;\n  const [newWorks, setNewWorks] = useState([]); // const [ids, setIds] = useState([])\n\n  const [search, setSearch] = useState(\"\"); // let arr =[]\n  //useEffect 2. when ids state gets updated, start fetching each individual id\n  //useEffect 1. gets ids when search term changes\n\n  useEffect(() => {\n    if (!search) return;\n    fetch(`https://collectionapi.metmuseum.org/public/collection/v1/search?artistOrCulture=true&q=${search}`).then(r => r.json()).then(data => {\n      // console.log('Data', data)\n      // let list = data.objectIDs.filter(entry => entry.created > 100).slice(0, 99);\n      let idList = data.objectIDs.slice(0, 10); // console.log(list)\n      // setIds(list)\n      // do the search functionality right here\n\n      let artList = [];\n      idList.forEach(async id => {\n        let req = await fetch(`https://collectionapi.metmuseum.org/public/collection/v1/objects/${id}`);\n        let res = await req.json();\n        let art = {\n          title: res.title,\n          image: res.primaryImageSmall,\n          date: res.objectDate,\n          artist: res.artistDisplayName,\n          medium: res.medium,\n          reference: res.objectURL\n        };\n        console.log('Work of art', art);\n        artList.push(art);\n        console.log('Art list', artList);\n        setNewWorks(artList);\n        window.location.reload();\n      });\n    });\n  } // eslint-disable-next-line react-hooks/exhaustive-deps\n  , [search]); //   const displayArtworks = newWorks.filter((newWork) => \n  //       Object.values(newWork).join(\" \").toLowerCase().includes(search.toLowerCase())\n  //   )\n  // console.log(newWorks)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      searchTerm: search,\n      onSearchChange: setSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(NewContainer, {\n      newWorks: newWorks,\n      handleClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Database, \"gggTRUGyI/1FRcLwSOZYmp94hPY=\");\n\n_c = Database;\nexport default Database;\n\nvar _c;\n\n$RefreshReg$(_c, \"Database\");","map":{"version":3,"names":["React","useEffect","useState","NewContainer","SearchBar","Database","handleClick","newWorks","setNewWorks","search","setSearch","fetch","then","r","json","data","idList","objectIDs","slice","artList","forEach","id","req","res","art","title","image","primaryImageSmall","date","objectDate","artist","artistDisplayName","medium","reference","objectURL","console","log","push","window","location","reload"],"sources":["/Users/yixin/Development/code/phase-2/phase-2-project/src/components/Database.js"],"sourcesContent":["import React, {useEffect,useState} from 'react'\n// import SearchBar from \"./SearchBar\"\nimport NewContainer from \"./NewContainer\"\nimport SearchBar from \"./SearchBar\"\n\n\nfunction Database({handleClick}) {\n\nconst [newWorks, setNewWorks] = useState([])\n// const [ids, setIds] = useState([])\nconst [search, setSearch] = useState(\"\")\n\n// let arr =[]\n\n//useEffect 2. when ids state gets updated, start fetching each individual id\n//useEffect 1. gets ids when search term changes\nuseEffect(() => {\n        if (!search) return;\n        fetch(`https://collectionapi.metmuseum.org/public/collection/v1/search?artistOrCulture=true&q=${search}`)                                            \n            .then(r=> r.json())\n            .then((data) => {\n                // console.log('Data', data)\n                // let list = data.objectIDs.filter(entry => entry.created > 100).slice(0, 99);\n                let idList = data.objectIDs.slice(0,10)\n                // console.log(list)\n                // setIds(list)\n                // do the search functionality right here\n                let artList = []\n                idList.forEach(async (id) => {\n                    let req = await fetch(`https://collectionapi.metmuseum.org/public/collection/v1/objects/${id}`);\n                    let res = await req.json()\n                    let art = {\n                        title: res.title,\n                        image: res.primaryImageSmall,\n                        date: res.objectDate,\n                        artist: res.artistDisplayName,\n                        medium: res.medium,\n                        reference: res.objectURL\n                    }\n                    console.log('Work of art', art)\n                    artList.push(art)\n                    console.log('Art list', artList)\n                    setNewWorks(artList)\n                    window.location.reload();\n                })\n            })\n        } // eslint-disable-next-line react-hooks/exhaustive-deps\n,[search])\n\n//   const displayArtworks = newWorks.filter((newWork) => \n//       Object.values(newWork).join(\" \").toLowerCase().includes(search.toLowerCase())\n//   )\n\n// console.log(newWorks)\n\nreturn (\n    <div>     \n    <SearchBar searchTerm={search} onSearchChange={setSearch}/>\n    <NewContainer newWorks={newWorks} handleClick={handleClick} />\n    </div>\n  )\n\n\n}\nexport default Database\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC,C,CACA;;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAGA,SAASC,QAAT,OAAiC;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EAEjC,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC,CAFiC,CAGjC;;EACA,MAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC,CAJiC,CAMjC;EAEA;EACA;;EACAD,SAAS,CAAC,MAAM;IACR,IAAI,CAACQ,MAAL,EAAa;IACbE,KAAK,CAAE,0FAAyFF,MAAO,EAAlG,CAAL,CACKG,IADL,CACUC,CAAC,IAAGA,CAAC,CAACC,IAAF,EADd,EAEKF,IAFL,CAEWG,IAAD,IAAU;MACZ;MACA;MACA,IAAIC,MAAM,GAAGD,IAAI,CAACE,SAAL,CAAeC,KAAf,CAAqB,CAArB,EAAuB,EAAvB,CAAb,CAHY,CAIZ;MACA;MACA;;MACA,IAAIC,OAAO,GAAG,EAAd;MACAH,MAAM,CAACI,OAAP,CAAe,MAAOC,EAAP,IAAc;QACzB,IAAIC,GAAG,GAAG,MAAMX,KAAK,CAAE,oEAAmEU,EAAG,EAAxE,CAArB;QACA,IAAIE,GAAG,GAAG,MAAMD,GAAG,CAACR,IAAJ,EAAhB;QACA,IAAIU,GAAG,GAAG;UACNC,KAAK,EAAEF,GAAG,CAACE,KADL;UAENC,KAAK,EAAEH,GAAG,CAACI,iBAFL;UAGNC,IAAI,EAAEL,GAAG,CAACM,UAHJ;UAINC,MAAM,EAAEP,GAAG,CAACQ,iBAJN;UAKNC,MAAM,EAAET,GAAG,CAACS,MALN;UAMNC,SAAS,EAAEV,GAAG,CAACW;QANT,CAAV;QAQAC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BZ,GAA3B;QACAL,OAAO,CAACkB,IAAR,CAAab,GAAb;QACAW,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBjB,OAAxB;QACAX,WAAW,CAACW,OAAD,CAAX;QACAmB,MAAM,CAACC,QAAP,CAAgBC,MAAhB;MACH,CAhBD;IAiBH,CA3BL;EA4BC,CA9BA,CA8BC;EA9BD,EA+BR,CAAC/B,MAAD,CA/BQ,CAAT,CAViC,CA2CjC;EACA;EACA;EAEA;;EAEA,oBACI;IAAA,wBACA,QAAC,SAAD;MAAW,UAAU,EAAEA,MAAvB;MAA+B,cAAc,EAAEC;IAA/C;MAAA;MAAA;MAAA;IAAA,QADA,eAEA,QAAC,YAAD;MAAc,QAAQ,EAAEH,QAAxB;MAAkC,WAAW,EAAED;IAA/C;MAAA;MAAA;MAAA;IAAA,QAFA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAQC;;GAzDQD,Q;;KAAAA,Q;AA0DT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}